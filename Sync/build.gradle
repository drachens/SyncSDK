plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.8.0'
    implementation 'net.java.dev.jna:jna-platform:5.8.0'

    // JUnit Jupiter para pruebas unitarias
    testImplementation 'junit:junit:4.13.2'

    // Mockito para mockear objetos en pruebas unitarias
    
    implementation 'org.springframework:spring-core:5.3.9' // Core Spring functionality
    implementation 'org.springframework:spring-context:5.3.9' // Application context for Spring
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.3' // Starter for building web, including RESTful, applications using Spring MVC
	
	//testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:3.12.4'
	   // JUnit Jupiter para pruebas unitarias
    testImplementation 'junit:junit:4.13.2'
    //testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.7.8'
    //testImplementation 'org.springframework:spring-test:5.3.9'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'

}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainClassName = 'com.marsol.sync.service.SDKService'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources/win32-x86-64']
        }
    }
    test {
    	resources{
            srcDirs = ['src/test/resources/win32-x86-64']	
    	}
    }
}
task copyDllToOutput(type: Copy) {
    from 'src/main/resources/win32-x86-64'
    into "$buildDir/resources/main/win32-x86-64"
}

processResources.dependsOn(copyDllToOutput)